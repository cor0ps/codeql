<!DOCTYPE qhelp PUBLIC
  "-//Semmle//qhelp//EN"
  "qhelp.dtd">
<qhelp>


<overview>
<p>
Java enables you to annotate methods that are intended to override a method in a superclass. 
Compilers are required to generate an error if such an annotated method does not override a method
in a superclass, which provides increased protection from potential defects. An annotated method also
improves code readability.
</p>

</overview>
<recommendation>

<p>
Add an <code>@Override</code> annotation to a method that is intended to override a method in a
superclass.
</p>

</recommendation>
<example>

<p>In the following example, <code>Triangle.getArea</code> overrides <code>Rectangle.getArea</code>,
so it is annotated with <code>@Override</code>.</p>

<sample src="MissingOverrideAnnotation.java" />

</example>
<references>


<li>
  J. Bloch, <em>Effective Java (second edition)</em>, Item 36.
  Addison-Wesley, 2008.
</li>
<li>
Help - Eclipse Platform:
<a href="http://help.eclipse.org/indigo/index.jsp?topic=%2Forg.eclipse.jdt.doc.user%2Freference%2Fpreferences%2Fjava%2Fcompiler%2Fref-preferences-errors-warnings.htm">Java Compiler Errors/Warnings Preferences</a>.
</li>
<li>
  Java Platform, Standard Edition 6, API Specification:
  <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Override.html">Annotation Type Override</a>.
</li>
<li>
  The Java Tutorials:
  <a href="http://docs.oracle.com/javase/tutorial/java/annotations/predefined.html">Predefined Annotation Types</a>.
</li>


</references>
</qhelp>
